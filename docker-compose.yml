version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanager-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-key-change-in-production}
      - DATABASE_URL=sqlite:///app.db
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - backend_data:/app/src/database
      - backend_logs:/app/logs
    networks:
      - taskmanager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - taskmanager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: taskmanager-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - taskmanager-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local

networks:
  taskmanager-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

